{"version":3,"sources":["fs (ignored)","crypto (ignored)","stream (ignored)","./src/app/filestructure/filestructure.service.ts","./src/environments/environment.ts","./src/app/filemanager/filemanager.component.ts","./src/app/filemanager/filemanager.component.html","./src/app/filemanager/filemanager.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/filestructure/filestructure.component.ts","./src/app/filestructure/filestructure.component.html","./src/app/login/login.service.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACqC;AACjC;AACI;AACU;;;AAMtD,MAAM,oBAAoB;IAG/B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QADlC,YAAO,GAAC,qEAAW,CAAC,OAAO,CAAC;IACU,CAAC;IAE/C,WAAW,CAAC,KAAwB;QAClC,IAAI,YAAY,GAAG,gBAAgB,CAAC;QACpC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,qBAAqB;YACrB,YAAY,GAAG,UAAU,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAChD;aAAM;YACL,qBAAqB;YACrB,YAAY,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SACzE;QACD,8BAA8B;QAC9B,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IACM,WAAW;QAChB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,GAAC,UAAU,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAI,MAAM,GAAG,EAAC,iBAAiB,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAC;QAClE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,EAAE,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC7G,CAAC;IAED,YAAY,CAAC,QAAQ;QACnB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAC,cAAc,CAAC;QAC5C,IAAI,MAAM,GAAG,EAAC,iBAAiB,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAC;QAClE,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,EAAC,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAC,UAAU,EAAC,CAAC,CAAC;IACtG,CAAC;;wFA7BU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,uCAAuC;IACvC,OAAO,EAAC,iCAAiC;CAC1C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBjB;AACS;AAGzB;AACuC;AACnB;AACzB;;;;;;;;;;;;;;;;;ICErB,gFACE;IAAA,+EAAwB;IAAA,iEAAM;IAAA,4DAAW;IACzC,6EACE;IADiB,mXAA6B;IAC9C,+EAAwB;IAAA,8DAAG;IAAA,4DAAW;IACxC,4DAAS;IACT,8EAIE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAgB;;;IAJd,0DAAuB;IAAvB,6FAAuB;IAErB,0DACF;IADE,sFACF;;;;IAiBI,wEACE;IAAA,qEAAI;IAAA,6EAA+C;IAA3B,8WAA0B;IAAC,uDAAoB;IAAA,4DAAS;IAAA,4DAAK;IACvF,qEAAe;;;IADsC,0DAAoB;IAApB,qFAAoB;;;IAyBnE,yEAAwC;IAAA,sEAAU;IAAA,4DAAK;;;;IACvD,yEACE;IAAA,6EACE;IADiB,2WAA8B;IAC/C,uDACF;IAAA,4DAAS;IACX,4DAAK;;;IAFD,0DACF;IADE,iGACF;;;IAMF,yEAAwC;IAAA,iEAAK;IAAA,4DAAK;;;IAClD,yEAAwC;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;IAK9D,yEAAwC;IAAA,iEAAK;IAAA,4DAAK;;;IAClD,yEAAuC;IAAA,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,2FAAiB;;;IAKxD,yEAAwC;IAAA,oEAAQ;IAAA,4DAAK;;;IACrD,yEAAuC;IAAA,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,kGAAwB;;;IAK/D,yEAAwC;IAAA,qEAAS;IAAA,4DAAK;;;IACtD,yEAAuC;IAAA,uDAA4B;IAAA,4DAAK;;;IAAjC,0DAA4B;IAA5B,sGAA4B;;;IAKjE,yEAAuC;IAAA,mEAAO;IAAA,4DAAK;;;;IACnD,yEACI;IAAA,6EACE;IADsB,0WAA6B;IACnD,2EAAU;IAAA,uDAAkB;IAAA,4DAAW;IACzC,4DAAS;IACb,4DAAK;;;IAFW,0DAAkB;IAAlB,mFAAkB;;;IAKtC,oEAA4D;;;IAC5D,oEAAkE;;;IAGlE,yEACE;IAAA,yEAAiC;IAAA,uDAA6C;IAAA,4DAAK;IACrF,4DAAK;;;;IAD8B,0DAA6C;IAA7C,mHAA6C;;;;IAchG,0EACE;IAAA,yEAA+C;IAAA,sEAAW;IAAA,4DAAK;IAC/D,6EACE;IADqD,4LAAS,kBAAc,aAAa,CAAC,IAAC;IAE3F,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;IACX,4DAAM;IACN,0EACE;IAAA,uEACE;IAAA,0EACE;IAAA,4EACF;IAD+B,oWAA+C;IAA5E,4DACF;IAAA,4DAAM;IACR,4DAAO;IACT,4DAAM;IACN,2EACE;IAAA,8EAA+G;IAAvC,6LAAS,kBAAc,aAAa,CAAC,IAAC;IAAC,kEAAM;IAAA,4DAAS;IAC9H,8EAAwH;IAAjD,wUAAS,gBAAY,YAAY,CAAC,iCAAc;IAAC,kEAAM;IAAA,4DAAS;IACzI,4DAAM;;AD7HD,MAAM,oBAAoB;IAS/B,YAAoB,kBAAqC,EAAU,MAAa,EAAU,YAAsB;QAA5F,uBAAkB,GAAlB,kBAAkB,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAO;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAPhH,iBAAY,GAAK,IAAI,CAAC;QACtB,SAAI,GAAK,IAAI,CAAC;QACd,iBAAY,GAAM,IAAI,CAAC;QAGvB,qBAAgB,GAAa,CAAC,WAAW,EAAC,WAAW,EAAC,MAAM,EAAC,aAAa,EAAC,iBAAiB,EAAC,QAAQ,CAAC,CAAC;IAItG,CAAC;IAEF,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAC5D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,IAAW,EAAC,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,QAAQ;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC,cAAc,EAAE,mBAAmB,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACvG,IAAI,CAAC,WAAW,GAAG,gBAAgB,MAAM,EAAE,CAAC;QAC9C,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE;YACZ,IAAI,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB,CAAC,MAAW;QAClC,IAAI,MAAM,KAAK,8EAAmB,CAAC,GAAG,EAAE;YACtC,OAAO,iBAAiB,CAAC;SAC1B;aAAM,IAAI,MAAM,KAAK,8EAAmB,CAAC,cAAc,EAAE;YACxD,OAAO,2BAA2B,CAAC;SACpC;aAAM;YACL,OAAQ,SAAS,MAAM,EAAE,CAAC;SAC3B;IACH,CAAC;IAED,UAAU,CAAC,GAAG;QACZ,IAAG,GAAG,CAAC,WAAW,CAAC,KAAK,MAAM,EAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACvB;aACG;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EAAC,WAAW,EAAC,GAAG,CAAC,SAAS,EAAC,IAAI,EAAC,GAAG,CAAC,IAAI,GAAC,GAAG,GAAC,GAAG,CAAC,SAAS,EAAC,CAAC,CAAC;YACtI,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;SACnC;IACH,CAAC;IAED,WAAW,CAAC,GAAG;QACb,IAAG,GAAG,CAAC,WAAW,CAAC,KAAK,MAAM,EAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SACrB;aACG;YACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EAAC,WAAW,EAAC,GAAG,CAAC,SAAS,EAAC,IAAI,EAAC,GAAG,CAAC,IAAI,GAAC,GAAG,GAAC,GAAG,CAAC,SAAS,EAAC,CAAC,CAAC;YACtI,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;SACnC;IACH,CAAC;IAED,+CAA+C;IAC/C,UAAU,CAAC,IAAI;QACb,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACzC,IAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,WAAW,EAAC;gBACvD,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;gBACrC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,6BAA6B,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC;gBACtD,IAAI,GAAG,GAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAC,KAAK,CAAC;gBACvC,wEAAwE;gBACxE,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,GAAG,EAAC,CAAC,EAAE,EAAC;oBACpB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;iBACzB;gBACD,MAAM;aACP;YACD,KAAK,IAAE,CAAC,CAAC;SACV;IACH,CAAC;IAED,eAAe,CAAC,KAAgB;QAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAW,EAAE,EAAE;YAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChI,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,MAAM;QAChB,IAAI,CAAC,YAAY,GAAC,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAC,MAAM,CAAC;QACzB,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;QACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,MAAM,EAAC,WAAW,EAAC,MAAM,EAAC,IAAI,EAAC,EAAE,EAAC,CAAC,CAAC;QACzE,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAW,EAAC,EAAE;YACnE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC5B,IAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,EAAC;oBAChC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;oBAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;iBACvB;qBACG;oBACF,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC,IAAI,CAAC;oBACvC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC;iBACrC;aACF;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAED,uBAAuB,CAAC,GAAG;QACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC7C,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClE,CAAC;IAED,6BAA6B,CAAC,YAAY,EAAC,IAAI;QAC7C,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,IAAW,EAAC,EAAE;YAC1F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;gBAC5B,IAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,KAAK,EAAC;oBAChC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;oBAC7B,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;iBACvB;qBACG;oBACF,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAC,IAAI,CAAC;oBACvC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC;iBACrC;aACF;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC,CACA;IACH,CAAC;IAED,QAAQ;QACN,cAAc,CAAC,OAAO,CAAC,YAAY,EAAC,OAAO,CAAC,CAAC;QAC7C,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;IAEA,WAAW,CAAC,GAAG;QACZ,IAAI,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;QAChC,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,QAAQ,CAAC;QACpC,IAAI,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAM,QAAQ,EAAC,EAAE,CAAC;YAClF,IAAI,IAAI,GAAO,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvC,yDAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACtB,CAAC,EAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAE5G,CAAC;IAED,SAAS,CAAC,GAAG;QACX,IAAI,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;QAChC,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,QAAQ,CAAC;QACpC,IAAI,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,EAAC,YAAY,CAAC,CAAC,SAAS,CAAC,CAAM,QAAQ,EAAC,EAAE,CAAC;YAClF,IAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBAChK,IAAI,WAAW,GAAG,WAAW,CAAC;gBAC9B,IAAI,IAAI,GAAO,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAC,EAAC,IAAI,EAAC,WAAW,EAAC,CAAC,CAAC;gBACvD,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;aAC3B;iBACI,IAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBAChC,IAAI,WAAW,GAAG,iBAAiB,CAAC;gBACpC,IAAI,IAAI,GAAO,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAC,EAAC,IAAI,EAAC,WAAW,EAAC,CAAE,CAAC;gBACxD,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;aAC3B;iBACI,IAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;gBAChC,IAAI,WAAW,GAAG,YAAY,CAAC;gBAC/B,IAAI,IAAI,GAAO,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAC,EAAC,IAAI,EAAC,WAAW,EAAC,CAAE,CAAC;gBACxD,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;aAC3B;iBACI,IAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBAC3D,uCAAuC;gBACvC,6EAAa,CAAC,EAAC,WAAW,EAAE,QAAQ,EAAC,CAAC,CAAC,IAAI,CAAC,UAAS,MAAM;oBAC3D,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,qBAAqB;oBACnD,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;oBAC9B,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;oBACpC,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,mDAAmD;gBACnF,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;aACX;iBACI,IAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;gBACjC,IAAI,IAAI,GAAO,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACtC,MAAM,EAAE,GAAG,yCAAS,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;gBAClE,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAClC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,EAAE,CAAC,UAAU,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;oBACrC,IAAG,CAAC,IAAE,CAAC,EAAC;wBACN,IAAI,MAAM,GAAW,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBACtC,IAAI,EAAE,GAAmB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBAC3C,IAAI,OAAO,GAAC,0CAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;wBACzC,IAAI,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;wBACvC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,GAAC,kZAAkZ,GAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAC,CAAC,CAAC,CAAC;wBAC3c,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;wBACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,GAAC,CAAC,CAAC,GAAC,cAAc,GAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;wBACzE,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,CAAC,GAAC,WAAW,GAAC,MAAM,GAAC,4CAA4C,GAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;wBACtH,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;wBACxC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,GAAC,CAAC,CAAC,GAAC,wMAAwM,GAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC;wBACnQ,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,KAAK,GAAC,EAAE,CAAC,GAAC,iDAAiD,GAAC,GAAG,GAAC,MAAM,GAAC,GAAG,GAAC,mBAAmB,GAAC,MAAM,GAAC,iBAAiB,GAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAC,EAAE,CAAC,CAAC;qBAC3K;yBACG;wBACF,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBAC1B,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBACvB,IAAI,QAAQ,GAAC,0CAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;wBAC1C,IAAI,UAAU,GAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;wBAC1C,QAAQ,GAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC,UAAU,GAAC,CAAC,CAAC,GAAC,cAAc,GAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,GAAC,CAAC,CAAC,CAAC;wBACpF,IAAI,QAAQ,GAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;wBAC1C,QAAQ,GAAC,WAAW,GAAC,MAAM,GAAC,4CAA4C,GAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAC,QAAQ,GAAC,CAAC,CAAC,GAAC,QAAQ,CAAC;wBACxH,IAAI,OAAO,GAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;wBACpD,OAAO,GAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,OAAO,CAAC,GAAC,QAAQ,GAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBACjE,IAAI,OAAO,GAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;wBAC1C,OAAO,GAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC,OAAO,CAAC,GAAC,6BAA6B,GAAC,GAAG,GAAC,MAAM,GAAC,GAAG,GAAC,mBAAmB,GAAC,MAAM,GAAC,WAAW,GAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBAC7I;iBACF;gBACD,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;gBAC9B,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACjC;QACH,CAAC,EAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC5G,CAAC;;wFAlOU,oBAAoB;oGAApB,oBAAoB;QCfjC,yEACI;QACA,yEACE;QAAA,+EACE;QAAA,yEAGE;QAAA,yEACF;QAAA,4DAAM;QACN,oIACE;QAWJ,4DAAe;QACjB,4DAAM;QACN,yEACA;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EACE;QAAA,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QACtB,2EACE;QACA,8EAA+C;QAArB,6IAAS,cAAU,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAChE,4DAAO;QACT,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,oIACE;QAEJ,4DAAK;QACP,4DAAM;QACN,2EACE;QAAA,kFACE;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,iFACF;QADkB,kJAAS,uBAAmB,IAAC;QAA7C,4DACF;QAAA,4DAAiB;QAYf,2EACE;QAAA,6EAEE;QACA,6EACE;QAAA,iHAAwC;QACxC,iHACE;QAIJ,qEAAe;QAGf,6EACE;QAAA,iHAAwC;QACxC,iHAAwC;QAC1C,qEAAe;QAGf,6EACE;QAAA,iHAAwC;QACxC,iHAAuC;QACzC,qEAAe;QAGf,6EACE;QAAA,iHAAwC;QACxC,iHAAuC;QACzC,qEAAe;QAGf,6EACE;QAAA,iHAAwC;QACxC,iHAAuC;QACzC,qEAAe;QAGf,6EACI;QAAA,iHAAuC;QACvC,iHACI;QAIN,qEAAe;QAEjB,iHAAuD;QACvD,iHAA6D;QAG7D,iHACE;QAEJ,4DAAQ;QACV,4DAAM;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,gEAAO;QACT,4DAAM;QACR,4DAAM;QACN,gNACE;;QAlHqB,0DAA8B;QAA9B,gFAA8B;QA2BzB,2DAAiC;QAAjC,qFAAiC;QAsB5B,0DAAyB;QAAzB,sFAAyB;QA8CrB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;;6FD1FjE,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEkD;AAC9C;AACI;AACU;;;AAKtD,MAAM,kBAAkB;IAG7B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QADlC,YAAO,GAAC,qEAAW,CAAC,OAAO,CAAC;IACU,CAAC;IAC/C,WAAW,CAAC,KAAwB;QAClC,IAAI,YAAY,GAAG,gBAAgB,CAAC;QACpC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,qBAAqB;YACrB,YAAY,GAAG,UAAU,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAChD;aAAM;YACL,qBAAqB;YACrB,YAAY,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SACzE;QACD,8BAA8B;QAC9B,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IACM,WAAW,CAAC,MAAM;QACvB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,GAAC,UAAU,CAAC;QAC1C,gDAAgD;QAChD,IAAI,MAAM,GAAG,EAAC,iBAAiB,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAC;QAClE,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,aAAa,EAAC,MAAM,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,EAAE,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,UAAU,EAAC,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/H,CAAC;IAEM,uBAAuB,CAAC,YAAY,EAAC,IAAI;QAC9C,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,GAAC,gBAAgB,CAAC;QAChD,gDAAgD;QAChD,IAAI,MAAM,GAAG,IAAI,gEAAW,CAAC,EAAC,iBAAiB,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;QACnF,OAAO,CAAC,GAAG,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,UAAU,GAAE,IAAI,+DAAU,EAAE,CAAC;QACjC,UAAU,GAAC,UAAU,CAAC,MAAM,CAAC,cAAc,EAAC,YAAY,CAAC,CAAC;QAC1D,UAAU,GAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QAC1C,+BAA+B;QAC/B,oCAAoC;QACpC,4BAA4B;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,EAAE,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,UAAU,EAAC,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/H,CAAC;IAEM,aAAa;QAClB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,GAAC,YAAY,CAAC;QAC5C,gDAAgD;QAChD,IAAI,MAAM,GAAG,EAAC,iBAAiB,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAC;QAClE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,EAAE,EAAC,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC7G,CAAC;IAED,YAAY,CAAC,IAAI,EAAC,YAAY;QAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAC,cAAc,CAAC;QAC5C,IAAI,MAAM,GAAG,EAAC,iBAAiB,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAC;QAClE,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,UAAU,GAAC,UAAU,CAAC,MAAM,CAAC,cAAc,EAAC,YAAY,CAAC,CAAC;QAC1D,UAAU,GAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAC,EAAC,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAC,UAAU,EAAC,CAAC,CAAC;IACtG,CAAC;IAED,UAAU,CAAC,YAAkB,EAAC,YAAY,EAAC,IAAI;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,GAAC,YAAY,CAAC;QAC3C,IAAI,MAAM,GAAG,IAAI,gEAAW,CAAC,EAAC,iBAAiB,EAAE,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC;QACnF,MAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QAC1C,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QACtC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAC,YAAY,CAAC,CAAC;QAC7C,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,EAAE,EAAC,OAAO,EAAC,MAAM,EAAC,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/G,CAAC;;oFA9DU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,QAAQ,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAG3B;AACuB;AACE;AACZ;;;;;;;;;;;;ICe7B,yEAAuD;IAAA,sEAAU;IAAA,4DAAK;;;IACtE,yEAAwC;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;IAK9D,yEAAuD;IAAA,iEAAK;IAAA,4DAAK;;;IACjE,yEAAuC;IAAA,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,6FAAmB;;;IAK1D,yEAAuD;IAAA,oEAAQ;IAAA,4DAAK;;;IACpE,yEAAuC;IAAA,uDAAwB;IAAA,4DAAK;;;IAA7B,0DAAwB;IAAxB,kGAAwB;;;IAK/D,yEAAuD;IAAA,qEAAS;IAAA,4DAAK;;;IACrE,yEAAuC;IAAA,uDAA4B;IAAA,4DAAK;;;IAAjC,0DAA4B;IAA5B,sGAA4B;;;IAKjE,yEAAuC;IAAA,oEAAQ;IAAA,4DAAK;;;;IACpD,yEACE;IAAA,6EACE;IADsB,qWAA0B;IAChD,2EAAU;IAAA,wEAAa;IAAA,4DAAW;IACpC,4DAAS;IACX,4DAAK;;;IAGT,oEAA4D;;;IAC5D,oEAAkE;;;IAGlE,yEACE;IAAA,yEAAiC;IAAA,uDAA6C;IAAA,4DAAK;IACrF,4DAAK;;;;IAD8B,0DAA6C;IAA7C,mHAA6C;;;ADxCzF,MAAM,sBAAsB;IASjC,YAAoB,oBAAyC,EAAS,MAAa;QAA/D,yBAAoB,GAApB,oBAAoB,CAAqB;QAAS,WAAM,GAAN,MAAM,CAAO;QANnF,eAAU,GAAmB,EAAE,CAAC;QAChC,qBAAgB,GAAa,CAAC,WAAW,EAAC,MAAM,EAAC,aAAa,EAAC,iBAAiB,EAAC,QAAQ,CAAC,CAAC;QAMzF,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,IAAW,EAAC,EAAE;YAC/D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC;IACH,CAAC;IAED,WAAW,CAAC,KAAY;QACvB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,cAAc,CAAC,OAAO,CAAC,YAAY,EAAC,OAAO,CAAC,CAAC;QAC7C,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,CAAC;IAEC,WAAW,CAAC,GAAG;QACb,IAAI,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpE,IAAI,IAAI,GAAO,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvC,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC7C,yDAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,EAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;IAC1G,CAAC;;4FA7CU,sBAAsB;sGAAtB,sBAAsB;wEAOtB,wEAAY;wEACZ,8DAAO;;;;;;QC1BpB,sEACE;QACA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,uEAAM;QAAA,oEAAS;QAAA,4DAAO;QACtB,0EACE;QAAA,4EAA+C;QAArB,8IAAS,cAAU,IAAC;QAAC,iEAAM;QAAA,4DAAS;QAChE,4DAAO;QACT,4DAAM;QACN,0EACE;QAAA,kFACE;QAAA,6EAAW;QAAA,kEAAM;QAAA,4DAAY;QAC7B,+EACF;QADkB,oJAAS,uBAAmB,IAAC;QAA7C,4DACF;QAAA,4DAAiB;QACf,0EACE;QAAA,6EAEE;QACA,6EACE;QAAA,mHAAuD;QACvD,mHAAwC;QAC1C,qEAAe;QAGf,6EACE;QAAA,mHAAuD;QACvD,mHAAuC;QACzC,qEAAe;QAGf,6EACE;QAAA,mHAAuD;QACvD,mHAAuC;QACzC,qEAAe;QAGf,6EACE;QAAA,mHAAuD;QACvD,mHAAuC;QACzC,qEAAe;QAGf,6EACI;QAAA,mHAAuC;QACvC,mHACE;QAIJ,qEAAe;QAEjB,mHAAuD;QACvD,mHAA6D;QAG7D,mHACE;QAEJ,4DAAQ;QACR,gFAAiF;QACnF,4DAAM;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAlDyB,2DAAyB;QAAzB,sFAAyB;QAoCrB,2DAAmC;QAAnC,iGAAmC;QAC1C,0DAAgD;QAAhD,kGAAgD;QAO/C,0DAA4B;QAA5B,kJAA4B;;6FD3C5C,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;6LAQ0C,SAAS;kBAAjD,uDAAS;mBAAC,wEAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;YACH,IAAI;kBAAvC,uDAAS;mBAAC,8DAAO,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;;;;;;;;;;;;;AE1BpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACiB;AACzB;AACgB;AAC8B;;;AAO1E,MAAM,YAAY;IAErB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QADlC,YAAO,GAAC,qEAAW,CAAC,OAAO,CAAC;IACU,CAAC;IAE/C,WAAW,CAAC,KAAwB;QAChC,IAAI,YAAY,GAAG,gBAAgB,CAAC;QACpC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,qBAAqB;YACrB,YAAY,GAAG,UAAU,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SAChD;aAAM;YACL,qBAAqB;YACrB,YAAY,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SACzE;QACD,8BAA8B;QAC9B,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAEI,OAAO,CAAC,QAAe,EAAC,QAAe;QAC1C,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,GAAC,OAAO,CAAC;QACvC,MAAM,WAAW,GAAG;YAChB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,QAAQ,CAAC;aACxD,CAAC;SACH,CAAC;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,EAAE,EAAC,WAAW,CAAC,CAAC,IAAI,CAAC,4DAAK,CAAC,CAAC,CAAC,EAAE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAE1G,CAAC;;wEA3BQ,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAHX,MAAM;6FAGP,YAAY;cAJxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACkC;AACL;AACpB;AACC;AACZ;AACS;AACK;AACC;AACG;AACD;AACP;AACS;AACT;AACZ;AACc;AACJ;AAC0B;AACJ;AACtB;AACS;AACf;AACY;;AAkCpD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,0DAAW,CAAC,YArBf;YACP,6DAAY;YACZ,uEAAa;YACb,oEAAgB;YAChB,yFAAoB;YACpB,qEAAgB;YAChB,0DAAW;YACX,oEAAa;YACb,2EAAgB;YAChB,+EAAkB;YAClB,qEAAa;YACb,uEAAc;YACd,gFAAkB;YAClB,uEAAc;YACd,4FAAuB;YACvB,yEAAe;YACf,qEAAa;YACb,qEAAa;YACb,8EAAiB;YACjB,2EAAgB;SACjB;mIAIU,SAAS,mBA9BlB,2DAAY;QACZ,6FAAsB;QACtB,qEAAc;QACd,yEAAe;QACf,wFAAoB,aAGpB,6DAAY;QACZ,uEAAa;QACb,oEAAgB;QAChB,yFAAoB;QACpB,qEAAgB;QAChB,0DAAW;QACX,oEAAa;QACb,2EAAgB;QAChB,+EAAkB;QAClB,qEAAa;QACb,uEAAc;QACd,gFAAkB;QAClB,uEAAc;QACd,4FAAuB;QACvB,yEAAe;QACf,qEAAa;QACb,qEAAa;QACb,8EAAiB;QACjB,2EAAgB;6FAKP,SAAS;cAhCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,6FAAsB;oBACtB,qEAAc;oBACd,yEAAe;oBACf,wFAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,6DAAY;oBACZ,uEAAa;oBACb,oEAAgB;oBAChB,yFAAoB;oBACpB,qEAAgB;oBAChB,0DAAW;oBACX,oEAAa;oBACb,2EAAgB;oBAChB,+EAAkB;oBAClB,qEAAa;oBACb,uEAAc;oBACd,gFAAkB;oBAClB,uEAAc;oBACd,4FAAuB;oBACvB,yEAAe;oBACf,qEAAa;oBACb,qEAAa;oBACb,8EAAiB;oBACjB,2EAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,0DAAW,CAAC;gBACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC3DD;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,WAAW;IAEtB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IACvC,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,OAAO,KAAK,CAAC;IACf,CAAC;IACM,UAAU;QACf,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,MAAM,EAAE;YACjD,MAAM,GAAG,IAAI,CAAC;SAChB;aACI;YACF,MAAM,GAAG,KAAK,CAAC;SACd;QACJ,OAAO,MAAM,CAAC;IACd,CAAC;;sEAnBQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,+DAAO;QACP,0EAAyB;QAAA,oEAAG;QAAA,4GAA4C;QAAA,4DAAI;QAAA,4DAAO;QACnF,0EAA2B;QAAA,oEAAG;QAAA,sEAAW;QAAA,uEAA6D;QAAA,iEAAM;QAAA,4DAAI;QAAC,4DAAI;QAAA,4DAAO;QAChI,4DAAM;;6FDGO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACA;AACZ;AACgC;;;AAE3E,MAAM,MAAM,GAAW;IACvB,EAAE,IAAI,EAAC,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE;IACtC,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAE,uFAAoB,EAAC,WAAW,EAAG,CAAC,yDAAW,CAAC,EAAE;CAAC,CAAC;AAM1E,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICmC1B,4EAA2D;IAAA,uFAA4B;IAAA,4DAAQ;;ADzBhH,MAAM,cAAc;IAOvB,YAAoB,YAA0B,EAAS,OAAe;QAAlD,iBAAY,GAAZ,YAAY,CAAc;QAAS,YAAO,GAAP,OAAO,CAAQ;QANtE,kBAAa,GAAS,KAAK,CAAC;QAE5B,6BAAwB,GAAW,KAAK,CAAC;IAIiC,CAAC;IAE3E,QAAQ;QACJ,cAAc,CAAC,OAAO,CAAC,YAAY,EAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,IAAI,EAAE,GAAE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,EAAE,GAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAC,CAAC,CAAC;QACrC,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QACzC,2CAA2C;QAC3C,IAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EACvB;YACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC/B,CAAC;IAGD,OAAO,CAAC,KAAK;QACT,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,IAAW,EAAC,EAAE;YAC5E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,SAAS,EAAC;gBAC5B,cAAc,CAAC,OAAO,CAAC,OAAO,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC9C,cAAc,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;gBAC7C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACvC;iBACG;gBACA,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;aACxC;QACL,CAAC,CAAC;IACN,CAAC;;4EArCQ,cAAc;8FAAd,cAAc;QCV3B,0EACI;QAAA,yEACI;QAAA,yEACK;QAAA,oEACK;QACN,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,wEAA+B;QAAA,sEAAW;QAAA,4DAAK;QACnD,4DAAM;QACN,yEACQ;QAAA,0EACI;QAAA,2EACI;QAAA,4EAA+B;QAAA,yEAC3B;QAAA,oEACJ;QAAA,4DAAI;QACJ,4DAAO;QACX,4DAAM;QACN,6EAEJ;QAFmE,qLAAsB;QAArF,4DAEJ;QAAA,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,4EACI;QAAA,yEACA;QAAA,oEAAO;QAAA,4DAAI;QACf,4DAAO;QACX,4DAAM;QACN,6EACJ;QADuE,qLAAsB;QAAzF,4DACJ;QAAA,4DAAM;QACN,2EACI;QAAA,8EAA6G;QAA1B,6IAAS,mBAAe,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC/H,4DAAM;QACd,4DAAM;QACN,2EACI;QAAA,iHAA2D;QAC/D,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,sEACM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,gEAAO;QACX,4DAAM;QACN,4DAAO;;QA5BoF,2DAAsB;QAAtB,iFAAsB;QAUlB,0DAAsB;QAAtB,iFAAsB;QAGnE,0DAA0B;QAA1B,uFAA0B;QAIjD,0DAAgC;QAAhC,8FAAgC;;6FDzBlD,cAAc;cAN1B,uDAAS;eAAC;gBACP,QAAQ,EAAC,OAAO;gBAChB,WAAW,EAAC,wBAAwB;gBACnC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACxC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpParams} from '@angular/common/http';\nimport {  throwError, Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilestructureService {\n  \n  private baseUrl=environment.baseURL;\n  constructor(private httpClient: HttpClient) { }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    // window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  public getFileList(){\n    let API_URL_TMP = this.baseUrl+\"filelist\"; \n    console.log(sessionStorage.getItem('token'));\n    let header = {'x-access-tokens': sessionStorage.getItem('token')};\n    return this.httpClient.get(`${API_URL_TMP}`,{headers:header}).pipe(retry(1), catchError(this.handleError));\n  }\n\n  downloadFile(filename): Observable< ArrayBuffer > {\n    const API_URL = this.baseUrl+\"downloadfile\";\n    let header = {'x-access-tokens': sessionStorage.getItem('token')};\n    let httpParams = new HttpParams().set(\"filename\",filename);\n\t\treturn this.httpClient.get(API_URL,{responseType: 'arraybuffer', headers: header, params:httpParams});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // baseURL:\"http://localhost:5000/api/\"\n  baseURL:\"http://192.168.43.147:5000/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { FilemanagerService } from './filemanager.service';\nimport {Router} from '@angular/router';\nimport {saveAs} from 'file-saver';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport {convertToHtml} from 'mammoth/mammoth.browser';\nimport * as XLSX from 'xlsx';\nimport { async } from 'rxjs/internal/scheduler/async';\n\n@Component({\n  selector: 'app-filemanager',\n  templateUrl: './filemanager.component.html',\n  styleUrls: ['./filemanager.component.css']\n})\nexport class FilemanagerComponent implements OnInit {\n  closeResult:any;\n  service_name:any=null;\n  path:any=null;\n  fileToUpload:File=null;\n  folders:any[];\n  foldPathList:any[];\n  displayedColumns: string[] = ['file_name','file_type','size','create_time','last_write_time','action'];\n  dataSource : MatTableDataSource<any>;\n  constructor(private FileManagerService:FilemanagerService, private router:Router, private modalService: NgbModal) {\n    \n   }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnInit(): void {\n    this.FileManagerService.getFolderList().subscribe((data: any[])=>{\n      console.log(data);\n      this.folders = data;\n    });\n  }\n\n  openDialog(content1) {\n    this.modalService.open(content1, {ariaLabelledBy: 'modal-basic-title',size:'lg'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n\n  showDirect(row){\n    if(row['file_type'] === 'file'){\n      this.btnDownload(row);\n    }\n    else{\n      this.foldPathList.push({service_name:this.foldPathList[0]['service_name'],folder_name:row.file_name,path:row.path+'/'+row.file_name});\n      this.getFileListInsideFolder(row);\n    } \n  }\n\n  showDirect2(row){\n    if(row['file_type'] === 'file'){\n      this.view_file(row);\n    }\n    else{\n      this.foldPathList.push({service_name:this.foldPathList[0]['service_name'],folder_name:row.file_name,path:row.path+'/'+row.file_name});\n      this.getFileListInsideFolder(row);\n    } \n  }\n\n  // this is main code for folder list traversing\n  getDetails(fold){\n    let count = 1;\n    for(let j=0;j<this.foldPathList.length;j++){\n      if(this.foldPathList[j].folder_name === fold.folder_name){\n        let service_name = fold.service_name;\n        let path = fold.path;\n        this.getFileListInsideFolderHelper(service_name,path);\n        let tar=this.foldPathList.length-count;\n        // to remove folder name from traversing folder list after select action\n        for(let i=0;i<tar;i++){\n          this.foldPathList.pop();\n        }\n        break;\n      }\n      count+=1;\n    }\n  }\n\n  handleFileInput(files : FileList){\n    this.fileToUpload = files.item(0);\n  }\n\n  uploadFile(){\n    this.FileManagerService.uploadFile(this.fileToUpload,this.service_name,this.path).subscribe((data: any[]) => {console.log(data);\n    },\n    error => {\n      console.log(error);\n    });\n  }\n\n  getFileList(folder){\n    this.foldPathList=[];\n    this.service_name=folder;\n    this.path='';\n    this.foldPathList.push({service_name:folder,folder_name:folder,path:''});\n    this.FileManagerService.getFileList(folder).subscribe((data: any[])=>{\n      console.log(data);\n      for(let i=0;i<data.length;i++){\n        if(data[i]['file_type'] === \"DIR\"){\n          data[i]['action'] = 'folder';\n          data[i]['size'] = '-';\n        }\n        else{\n          data[i]['size'] = data[i]['size']+'KB';\n          data[i]['action'] = 'file_download';\n        } \n      }\n      this.dataSource = new MatTableDataSource(data);\n    })\n  }\n\n  getFileListInsideFolder(row){\n    this.service_name = row['service_name'];\n    this.path = row['path']+'/'+row['file_name'];\n    this.getFileListInsideFolderHelper(this.service_name,this.path);\n  }\n\n  getFileListInsideFolderHelper(service_name,path){\n    this.FileManagerService.getFileListInsideFolder(service_name,path).subscribe((data: any[])=>{\n      console.log(data);\n      for(let i=0;i<data.length;i++){\n        if(data[i]['file_type'] === \"DIR\"){\n          data[i]['action'] = 'folder';\n          data[i]['size'] = '-';\n        }\n        else{\n          data[i]['size'] = data[i]['size']+'KB';\n          data[i]['action'] = 'file_download';\n        } \n      }\n      this.dataSource = new MatTableDataSource(data);\n    }\n    )\n  }\n\n  doLogout(){\n    sessionStorage.setItem('isLoggedIn','false');    \n    sessionStorage.removeItem('token'); \n    this.router.navigate(['/']);\n}\n\n btnDownload(row) {\n    let filename = row['file_name'];\n    let path = row['path']+'/'+filename;\n    let service_name = row['service_name'];\n    console.log(filename);\n    this.FileManagerService.downloadFile(path,service_name).subscribe(async response => {\n      let blob:any = new Blob([response]);\n\t\t\tsaveAs(blob, filename);\n    }), error => console.log('Error downloading the file'),() => console.info('File downloaded successfully');\n    \n  }\n\n  view_file(row){\n    var filename = row['file_name'];\n    var path = row['path']+'/'+filename;\n    var service_name = row['service_name'];\n    console.log(filename);\n    this.FileManagerService.downloadFile(path,service_name).subscribe(async response => {\n      if(filename.includes(\".jpg\")|filename.includes(\".jpeg\")|filename.includes(\".png\")|filename.includes(\".jfif\")|filename.includes(\".webp\")|filename.includes(\".gif\")){\n        var contentType = \"image/png\";\n        let blob:any = new Blob([response],{type:contentType});\n        var url = window.URL.createObjectURL(blob);\n        window.open(url,\"_blank\");\n      }\n      else if(filename.includes(\".pdf\")){\n        var contentType = \"application/pdf\";\n        let blob:any = new Blob([response],{type:contentType} );\n        var url = window.URL.createObjectURL(blob);\n        window.open(url,\"_blank\");\n      }\n      else if(filename.includes(\".txt\")){\n        var contentType = \"text/plain\";\n        let blob:any = new Blob([response],{type:contentType} );\n        var url = window.URL.createObjectURL(blob);\n        window.open(url,\"_blank\");\n      }\n      else if(filename.includes(\".doc\")|filename.includes(\".docx\")){\n        // let blob:any = new Blob([response]);\n        convertToHtml({arrayBuffer: response}).then(function(result){\n        var html_temp = result.value; // The generated HTML\n        var newWindow = window.open();\n        newWindow.document.write(html_temp);\n        var messages = result.messages; // Any messages, such as warnings during conversion\n        }).done();\n      }\n      else if(filename.includes(\".xlsx\")){\n        let blob:any = new Blob([response]);\n      const wb = XLSX.read(await blob.arrayBuffer(), { type: \"array\" });\n      console.log(wb.SheetNames.length);\n      for(let i=0;i<wb.SheetNames.length;i++){\n        if(i==0){\n          var wsname: string = wb.SheetNames[i];\n          var ws: XLSX.WorkSheet = wb.Sheets[wsname];\n          var xl_data=XLSX.utils.sheet_to_html(ws);\n          var indx = xl_data.indexOf(\"</title>\");\n          xl_data = xl_data.slice(0,indx+8)+'<style type=\"text/css\"> #table1 {border-collapse: collapse;width: 98%;} #table1 td{border: 1px solid #ddd;padding: 8px;} #table1 tr:first-child{background-color: #f2f2f2;} #table1 tr:hover {background-color: #ddd;} .container{width: 98%;} .footer{position:fixed;left:0;bottom:0;width:100%;height:40px;color: rgb(170, 170, 170);background-color:#005278 !important;padding: 2px;overflow: auto;}</style>'+xl_data.slice(indx+8);\n          var indx2 = xl_data.indexOf(\"<table\");\n          xl_data = xl_data.slice(0,indx2+6)+' id=\"table1\"'+xl_data.slice(indx2+6);\n          xl_data = xl_data.slice(0,indx2)+'<div id=\"'+wsname+'\" class=\"container\" style=\"display:none;\">'+xl_data.slice(indx2);\n          var indx3 = xl_data.indexOf(\"</table>\");\n          xl_data = xl_data.slice(0,indx3+8)+'</div><script>function togglediv(id) {document.querySelectorAll(\".container\").forEach(function(div) { if (div.id == id) { div.style.display = \"block\";} else{div.style.display = \"none\";}});}</script>'+xl_data.slice(indx3+8);\n          xl_data = xl_data.slice(0,indx3+14)+'<div class=\"footer\"><button onclick=\"togglediv('+\"'\"+wsname+\"'\"+')\" type=\"button\">'+wsname+'</button></div>'+xl_data.slice(indx3+14);\n        }\n        else{\n          wsname = wb.SheetNames[i];\n          ws = wb.Sheets[wsname];\n          var xl_data2=XLSX.utils.sheet_to_html(ws);\n          var start_indx=xl_data2.indexOf(\"<table\");\n          xl_data2=xl_data2.slice(0,start_indx+6)+' id=\"table1\"'+xl_data2.slice(start_indx+6);\n          var end_indx=xl_data2.indexOf(\"</table>\");\n          xl_data2='<div id=\"'+wsname+'\" class=\"container\" style=\"display:none;\">'+xl_data2.slice(start_indx,end_indx+8)+\"</div>\";\n          var jn_indx=xl_data.indexOf('<div class=\"footer\">');\n          xl_data=xl_data.slice(0,jn_indx)+xl_data2+xl_data.slice(jn_indx);\n          var ls_indx=xl_data.lastIndexOf('</div>');\n          xl_data=xl_data.slice(0,ls_indx)+'<button onclick=\"togglediv('+\"'\"+wsname+\"'\"+')\" type=\"button\">'+wsname+'</button>'+xl_data.slice(ls_indx);\n        }\n      }\n      var newWindow = window.open();\n      newWindow.document.write(xl_data);\n      }\n    }), error => console.log('Error downloading the file'),() => console.info('File downloaded successfully');\n  }\n\n}\n","<div class=\"row\">\n    <!-- <app-nav></app-nav> --> \n    <div class=\"column1\">\n      <mat-nav-list >\n        <div class=\"card-header bg-info text-light mat-h2\" style=\"\n        padding-top: 16px;\n        padding-bottom: 16px;\">\n          Directory(s)\n        </div>\n        <mat-list-item *ngFor=\"let folder of folders\">\n          <mat-icon mat-list-icon>folder</mat-icon>\n          <button mat-button (click)=\"getFileList(folder)\">\n            <mat-icon mat-list-icon>add</mat-icon>\n          </button>\n          <div mat-line style=\"font-size:15px;\" \n          mat-raised-button #tooltip=\"matTooltip\"\n          matTooltip=\"{{folder}}\"\n          matTooltipPosition=\"above\">\n            {{folder}}\n          </div>\n        </mat-list-item>\n      </mat-nav-list>\n    </div>\n    <div class=\"column2\">\n    <div class=\"container-fluid h-150\">\n      <div class=\"col-md-12\">\n        <div class=\"card\">\n          <div class=\"card-header bg-info text-light mat-h2\">\n            <span>File List</span>\n            <span style=\"float:right\">\n              <!-- <button type=\"button\" class=\"btn btn-secondary btn-block\" (click)=\"openDialog(content1)\">Create User</button> -->\n              <button mat-raised-button (click)=\"doLogout()\">Logout</button>\n            </span>\n          </div>\n          <div class=\"bord-btm pad-ver card-header bg-info text-light\">\n            <ol class=\"breadcrumb\" >\n              <ng-container *ngFor=\"let fold of foldPathList\">\n                <li><button class=\"btn\" (click)=\"getDetails(fold)\">{{fold.folder_name}}</button></li>\n              </ng-container>\n            </ol>\n          </div>\n          <div class=\"card-body\">\n            <mat-form-field>\n              <mat-label>Filter</mat-label>\n              <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Object Name\" #input>\n            </mat-form-field>\n            <!-- <div class=\"flex-container\">\n              <div style=\"width: 90%;\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Filter</mat-label>\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Object Name\" #input>\n                </mat-form-field>\n              </div>\n              <div style=\"width: 10%;\">\n                <button mat-raised-button (click)=\"openDialog(content1)\">Upload</button>\n              </div>\n            </div> -->\n              <div class=\"mat-elevation-z8\">\n                <table mat-table [dataSource]=\"dataSource\">\n  \n                  <!-- file name Column -->\n                  <ng-container matColumnDef=\"file_name\">\n                    <th mat-header-cell *matHeaderCellDef > File Name </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                      <button mat-button (click)=\"showDirect2(element)\">\n                        {{element.file_name}}\n                      </button>\n                    </td>\n                  </ng-container>\n\n                  <!-- file type Column -->\n                  <ng-container matColumnDef=\"file_type\">\n                    <th mat-header-cell *matHeaderCellDef > Type </th>\n                    <td mat-cell *matCellDef=\"let element\"> {{element.file_type}} </td>\n                  </ng-container>\n              \n                  <!--size Column -->\n                  <ng-container matColumnDef=\"size\">\n                    <th mat-header-cell *matHeaderCellDef > Size </th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.size}} </td>\n                  </ng-container>\n  \n                  <!--Created Time Column -->\n                  <ng-container matColumnDef=\"create_time\">\n                    <th mat-header-cell *matHeaderCellDef > Created </th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.create_time}} </td>\n                  </ng-container>\n  \n                  <!--Modified Time Column -->\n                  <ng-container matColumnDef=\"last_write_time\">\n                    <th mat-header-cell *matHeaderCellDef > Modified </th>\n                    <td mat-cell *matCellDef=\"let element\">{{element.last_write_time}} </td>\n                  </ng-container>\n  \n                  <!-- Action Column -->\n                  <ng-container matColumnDef=\"action\">\n                      <th mat-header-cell *matHeaderCellDef> Action </th>\n                      <td mat-cell *matCellDef=\"let element\">\n                          <button mat-icon-button (click)=\"showDirect(element)\">\n                            <mat-icon>{{element.action}}</mat-icon>\n                          </button>\n                      </td>\n                    </ng-container>\n              \n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  \n                  <!-- Row shown when there is no matching data. -->\n                  <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                  </tr>\n                </table>\n              </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"footer text-light\">  \n    <p></p>\n  </div>\n</div>\n<ng-template #content1 let-modal>\n  <div class=\"modal-header bg-info text-light\">\n    <h2 class=\"modal-title\" id=\"modal-basic-title\">Upload File</h2>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <!-- <span aria-hidden=\"true\">&times;</span> -->\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"form-group\">  \n        <input type=\"file\" id=\"file\" (change)=\"handleFileInput($event.target.files)\">     \n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark  bg-info text-light\"  (click)=\"modal.dismiss('Cross click')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-outline-dark  bg-info text-light\" (click)=\"modal.close('Save click');uploadFile()\">Upload</button>\n  </div>\n</ng-template>","import { Injectable } from '@angular/core';\nimport {FormGroup } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse, HttpParams, HttpHeaders} from '@angular/common/http';\nimport {  throwError, Observable } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilemanagerService {\n\n  private baseUrl=environment.baseURL;\n  constructor(private httpClient: HttpClient) { }\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    // window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n  public getFileList(folder){\n    let API_URL_TMP = this.baseUrl+\"filelist\"; \n    // console.log(sessionStorage.getItem('token'));\n    let header = {'x-access-tokens': sessionStorage.getItem('token')};\n    let httpParams = new HttpParams().set(\"folder_name\",folder);\n    return this.httpClient.get(`${API_URL_TMP}`,{headers:header,params:httpParams}).pipe(retry(1), catchError(this.handleError));\n  }\n\n  public getFileListInsideFolder(service_name,path){\n    let API_URL_TMP = this.baseUrl+\"folderfilelist\"; \n    // console.log(sessionStorage.getItem('token'));\n    let header = new HttpHeaders({'x-access-tokens': sessionStorage.getItem('token')});\n    console.log(service_name,path);\n    let httpParams= new HttpParams();\n    httpParams=httpParams.append('service_name',service_name);\n    httpParams=httpParams.append('path',path);\n    // const form = new FormData();\n    // form.append('service_name',path);\n    // form.append('path',path);\n    return this.httpClient.get(`${API_URL_TMP}`,{headers:header,params:httpParams}).pipe(retry(1), catchError(this.handleError));\n  }\n\n  public getFolderList(){\n    let API_URL_TMP = this.baseUrl+\"folderlist\"; \n    // console.log(sessionStorage.getItem('token'));\n    let header = {'x-access-tokens': sessionStorage.getItem('token')};\n    return this.httpClient.get(`${API_URL_TMP}`,{headers:header}).pipe(retry(1), catchError(this.handleError));\n  }\n\n  downloadFile(path,service_name): Observable< ArrayBuffer > {\n    const API_URL = this.baseUrl+\"downloadfile\";\n    let header = {'x-access-tokens': sessionStorage.getItem('token')};\n    let httpParams = new HttpParams();\n    httpParams=httpParams.append('service_name',service_name);\n    httpParams=httpParams.append('path',path);\n\t\treturn this.httpClient.get(API_URL,{responseType: 'arraybuffer', headers: header, params:httpParams});\n  }\n\n  uploadFile(fileToUpload: File,service_name,path){\n    const endPoint = this.baseUrl+\"uploadFile\";\n    let header = new HttpHeaders({'x-access-tokens': sessionStorage.getItem('token')});\n    const formData: FormData = new FormData();\n    formData.append('file', fileToUpload);\n    formData.append('service_name',service_name);\n    formData.append('path',path);\n    return this.httpClient.post(endPoint,formData, {headers:header}).pipe(retry(1),catchError(this.handleError));\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'netapp';\n}\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FilestructureService } from './filestructure.service';\nimport {Router} from '@angular/router';\nimport {saveAs} from 'file-saver';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\n\nexport interface PeriodicElement {\n  file_name: string;\n  size: string;\n}\n\n@Component({\n  selector: 'app-filestructure',\n  templateUrl: './filestructure.component.html',\n  styleUrls: ['./filestructure.component.css']\n})\nexport class FilestructureComponent implements OnInit {\n\n  folder_list:any;\n  folderlist:PeriodicElement[]=[];\n  displayedColumns: string[] = ['file_name','size','create_time','last_write_time','action'];\n  dataSource: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  constructor(private FilestructureService:FilestructureService,private router:Router) {\n    this.FilestructureService.getFileList().subscribe((data: any[])=>{\n      console.log(data);\n      this.folder_list=data;\n      this.dataSource = new MatTableDataSource(data);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    })\n   }\n\n   applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  doLogout(){\n    sessionStorage.setItem('isLoggedIn','false');    \n    sessionStorage.removeItem('token'); \n    this.router.navigate(['/']);\n}\n\n  btnDownload(row) {\n    let filename = row['file_name'];\n    console.log(filename);\n    this.FilestructureService.downloadFile(filename).subscribe(response => {\n      let blob:any = new Blob([response]);\n\t\t\tconst url = window.URL.createObjectURL(blob);\n\t\t\tsaveAs(blob, filename);\n\t\t}), error => console.log('Error downloading the file'),() => console.info('File downloaded successfully');\n  }\n\n}\n","<div>\n  <!-- <app-nav></app-nav> -->\n  <div class=\"container-fluid h-150\">\n    <div class=\"col-md-12 p-4 border-right\">\n      <div class=\"card\">\n        <div class=\"card-header bg-info text-light mat-h2\">\n          <span>File List</span>\n          <span style=\"float:right\">\n            <button mat-raised-button (click)=\"doLogout()\">Logout</button>\n          </span>\n        </div>\n        <div class=\"card-body\">\n          <mat-form-field>\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Object Name\" #input>\n          </mat-form-field>\n            <div class=\"mat-elevation-z8\">\n              <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                <!-- file name Column -->\n                <ng-container matColumnDef=\"file_name\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> File Name </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.file_name}} </td>\n                </ng-container>\n            \n                <!--size Column -->\n                <ng-container matColumnDef=\"size\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Size </th>\n                  <td mat-cell *matCellDef=\"let element\">{{element.size}}KB </td>\n                </ng-container>\n\n                <!--Created Time Column -->\n                <ng-container matColumnDef=\"create_time\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Created </th>\n                  <td mat-cell *matCellDef=\"let element\">{{element.create_time}} </td>\n                </ng-container>\n\n                <!--Modified Time Column -->\n                <ng-container matColumnDef=\"last_write_time\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Modified </th>\n                  <td mat-cell *matCellDef=\"let element\">{{element.last_write_time}} </td>\n                </ng-container>\n\n                <!-- Action Column -->\n                <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef> Actions </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                      <button mat-icon-button (click)=\"btnDownload(row)\">\n                        <mat-icon>file_download</mat-icon>\n                      </button>\n                    </td>\n                  </ng-container>\n            \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                  <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n                </tr>\n              </table>\n              <mat-paginator [pageSizeOptions]=\"[20, 10]\" showFirstLastButtons></mat-paginator>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment'\nimport {  throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class LoginService{\n    private baseUrl=environment.baseURL;\n    constructor(private httpClient: HttpClient) { }\n\n    handleError(error: HttpErrorResponse) {\n        let errorMessage = 'Unknown error!';\n        if (error.error instanceof ErrorEvent) {\n          // Client-side errors\n          errorMessage = `Error: ${error.error.message}`;\n        } else {\n          // Server-side errors\n          errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        }\n        // window.alert(errorMessage);\n        return throwError(errorMessage);\n      }\n\n    public doLogin(password:string,username:string){\n        let API_URL_TMP = this.baseUrl+\"login\";\n        const httpOptions = {\n            headers: new HttpHeaders({\n              'Content-Type':  'application/json',\n              'Authorization': 'Basic ' + btoa(username+\":\"+password)\n            })\n          };\n        return this.httpClient.get(`${API_URL_TMP}`,httpOptions).pipe(retry(1), catchError(this.handleError));\n\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FilestructureComponent } from './filestructure/filestructure.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { FooterComponent } from './footer/footer.component';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule, MatSort} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {AuthService} from './auth.service';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FilemanagerComponent } from './filemanager/filemanager.component';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { CommonModule } from \"@angular/common\";\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilestructureComponent,\n    LoginComponent,\n    FooterComponent,\n    FilemanagerComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatListModule,\n    MatGridListModule,\n    MatTooltipModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate, Router } from '@angular/router'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements CanActivate {\n\n  constructor(private router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {      \n    if (this.isLoggedIn()) {      \n      return true;      \n    } \n    this.router.navigate(['/']);\n    return false;\n  }\n  public isLoggedIn(): boolean {      \n    let status = false;      \n    if (sessionStorage.getItem('isLoggedIn') == \"true\") {      \n       status = true;      \n    }    \n    else {      \n       status = false;      \n       }      \n    return status;      \n    }  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer text-light\">\n    <p></p>\n    <span style=\"float:left\"><p>COPYRIGHT IVTREE ® 2020. ALL RIGHTS RESERVED</p></span>\n    <span style=\"float:right;\"><p>Powered by <a style=\"font-size: medium ;color:white;\" href=\"ivtree.com\">IVTREE</a> </p></span>  \n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {AuthService} from './auth.service';\nimport { FilemanagerComponent } from './filemanager/filemanager.component';\n\nconst routes: Routes = [\n{ path:'', component: LoginComponent },\n{path:'filelist', component: FilemanagerComponent,canActivate : [AuthService] }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {LoginService} from './login.service';\n\n@Component({\n    selector:'login',\n    templateUrl:'./login.component.html',\n     styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit{\n    buttonDisable:boolean=false;\n    serverdate:Date;\n    displayLoginFailureBlock:boolean = false;\n    password:string;\n    username:string;\n\n    constructor(private loginService: LoginService,private _router: Router) { }\n\n    ngOnInit(): void {\n        sessionStorage.setItem('isLoggedIn','false');\n        this.serverdate = new Date();\n        var dd= this.serverdate.getDate();\n        var mm= this.serverdate.getMonth()+1;\n        var year = this.serverdate.getFullYear();\n        // console.log(this.serverdate,dd,mm,year);\n        if(mm >= 12 && dd >= 21)\n        {\n          this.buttonDisable = true;\n        }\n        this.buttonDisable = false;\n    }\n  \n\n    doLogin(event){\n        this.loginService.doLogin(this.password,this.username).subscribe((data: any[])=>{\n            console.log(data);\n            if (data['token'] !== undefined){\n                sessionStorage.setItem(\"token\",data['token']);\n                sessionStorage.setItem('isLoggedIn', \"true\");\n                this._router.navigate(['clusters']);\n                this._router.navigate(['filelist']);\n            }\n            else{\n                this.displayLoginFailureBlock = true;\n            }\n        })\n    }\n    \n}","<body class=\"inventory-body\">\n    <div class=\"container h-100\">\n        <div class=\"row h-100\">\n             <div class=\"col align-self-start\">            \n            </div>\n            <div class=\"col align-self-center\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <h1 style=\"text-align:center;\">NAS Gateway</h1>\t\t\t\n                    </div>\n                    <div class=\"card-body vcenter\">\n                            <div class=\"input-group form-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"material-icons\">\n                                        person\n                                    </i>\n                                    </span>\n                                </div>\n                                <input type=\"text\" class=\"form-control\" placeholder=\"username\" [(ngModel)]=\"username\">\n                                \n                            </div>\n                            <div class=\"input-group form-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\">\n                                        <i class=\"material-icons\">\n                                        vpn_key</i>\n                                    </span>\n                                </div>\n                                <input type=\"password\" class=\"form-control\" placeholder=\"password\" [(ngModel)]=\"password\"/>\n                            </div>\t\t\t\t\t\n                            <div class=\"form-group\">\n                                <button type=\"button\" [disabled]=\"buttonDisable\" class=\"btn float-right login_btn\" (click)=\"doLogin($event)\">Login</button>\n                            </div>\n                    </div>\t\n                    <div class=\"card-footer\">\n                        <label *ngIf=\"displayLoginFailureBlock\" class=\"text-light\">Invalid Username or Password</label>\n                    </div>\t\t\n                </div>\n            </div>\n            <div class=\"col align-self-end\">            \n            </div>\n        </div>\n    </div>\n    <div class=\"footer text-light\">\n        <p></p>\n    </div>\n    </body>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}